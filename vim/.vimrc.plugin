filetype plugin indent on



"mdプラグイン用
let g:vim_markdown_liquid=1
let g:vim_markdown_frontmatter=1
let g:vim_markdown_math=1



"unite prefix key.
nnoremap [unite] <Nop>
nmap <Space>f [unite]

"unite general settings
"インサートモードで開始
let g:unite_enable_start_insert = 1
"最近開いたファイル履歴の保存数
let g:unite_source_file_mru_limit = 50000

"file_mruの表示フォーマットを指定。空にすると表示スピードが高速化される
"let g:unite_source_file_mru_filename_format = ''

"現在開いているファイルのディレクトリ下のファイル一覧。
"開いていない場合はカレントディレクトリ
nnoremap <silent> [unite]f :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
"バッファ一覧
nnoremap <silent> [unite]b :<C-u>Unite buffer<CR>
"レジスタ一覧
nnoremap <silent> [unite]r :<C-u>Unite -buffer-name=register register<CR>
"最近使用したファイル一覧
nnoremap <silent> [unite]m :<C-u>Unite file_mru<CR>
"ブックマーク一覧
nnoremap <silent> [unite]c :<C-u>Unite bookmark<CR>
"ブックマークに追加
nnoremap <silent> [unite]a :<C-u>UniteBookmarkAdd<CR>
"uniteを開いている間のキーマッピング
autocmd FileType unite call s:unite_my_settings()
function! s:unite_my_settings()"{{{
"escでuniteを終了
  nmap <buffer> <esc> <plug>(unite_exit)
"入力モードのときjjでノーマルモードに移動
  imap <buffer> jj <plug>(unite_insert_leave)
"入力モードのときctrl+wでバックスラッシュも削除
  imap <buffer> <c-w> <plug>(unite_delete_backward_path)
"ctrl+jで縦に分割して開く
  nnoremap <silent> <buffer> <expr> <c-j> unite#do_action('split')
  inoremap <silent> <buffer> <expr> <c-j> unite#do_action('split')
"ctrl+jで横に分割して開く
  nnoremap <silent> <buffer> <expr> <c-l> unite#do_action('vsplit')
  inoremap <silent> <buffer> <expr> <c-l> unite#do_action('vsplit')
"ctrl+oでその場所に開く
  nnoremap <silent> <buffer> <expr> <c-o> unite#do_action('open')
  inoremap <silent> <buffer> <expr> <c-o> unite#do_action('open')
"ctrl+tでその場所に開く
  nnoremap <silent> <buffer> <expr> <c-t> unite#do_action('tabopen')
  inoremap <silent> <buffer> <expr> <c-t> unite#do_action('tabopen')
endfunction"}}}

" indentLine用
let g:indentLine_leadingSpaceChar = '·'
let g:indentLine_leadingSpaceEnabled = 1

" previm用
let g:previm_open_cmd = 'open -a Google\ Chrome'
let g:previm_enable_realtime = 0
" デフォルトのCSSに加えて独自のCSSも適用する
"let g:previm_custom_css_path = '/Users/kanno/tmp/some.css'
nnoremap <Leader>p :PrevimOpen<CR>

" v連打で選択範囲を広げる
let g:expand_region_text_objects = {
      \ 'iw'  :0,
      \ 'iW'  :0,
      \ 'i"'  :0,
      \ 'i''' :0,
      \ 'i]'  :1, 
      \ 'ib'  :1,
      \ 'iB'  :1,
      \ 'il'  :0,
      \ 'ip'  :0,
      \ 'ie'  :0,
      \ }

vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)

" C-w から spaceへ
" let mapleader = "\<Space>"
"nnoremap [space] <Nop>
"nmap <space> [space]
nnoremap <Space>j <C-w>j
nnoremap <Space>k <C-w>k
nnoremap <Space>l <C-w>l
nnoremap <Space>h <C-w>h
nnoremap <Space>J <C-w>J
nnoremap <Space>K <C-w>K
nnoremap <Space>L <C-w>L
nnoremap <Space>H <C-w>H
nnoremap <Space>s :<C-u>sp<CR>
nnoremap <Space>v :<C-u>vs<CR>


" vimFilerをデフォルトファイラーに。
let g:vimfiler_as_default_explorer = 1

" vimFilerのセーフモードをoff
let g:vimfiler_safe_mode_by_default = 0

" vimFilerを開く時は必ず35のwidthで。
nnoremap <silent><Leader>fi :<C-u>VimFilerBufferDir -split -simple -winwidth=35 -no-quit<CR>


let g:EditorConfig_exec_path = '/Users/takumi/.cache/dein/repos/github.com/editorconfig/editorconfig-vim/plugin/editorconfig.py'



